
import { GoogleGenAI, Modality } from "@google/genai";
import { UserImage } from '../types';

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY as string });

export const applyHairstyle = async (
  userImage: UserImage,
  prompt: string
): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image-preview',
      contents: {
        parts: [
          {
            inlineData: {
              data: userImage.base64,
              mimeType: userImage.mimeType,
            },
          },
          {
            text: prompt,
          },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });

    const candidate = response.candidates?.[0];

    if (candidate?.content?.parts) {
      for (const part of candidate.content.parts) {
        if (part.inlineData) {
          return part.inlineData.data;
        }
      }
    }

    throw new Error("No image was generated by the AI. Please try again.");
  } catch (error) {
    console.error("Error applying hairstyle:", error);
    if (error instanceof Error) {
        throw new Error(`Failed to generate hairstyle: ${error.message}`);
    }
    throw new Error("An unknown error occurred while generating the hairstyle.");
  }
};
